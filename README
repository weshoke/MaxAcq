MaxAcq is a Java (mxj) objet for Max (www.cycling74.com) for communicating with Biopac's Acq server.  It interfaces with the Acq server's streaming capability, outputting data channels as Jitter matrices.

Prerequisites: 
	- AcqKnowledge software with network capability from Biopac
	- Max5 from Cycling '74
	- Java runtime environment


Workflow:
1) Open AcqKnowledge application.
2) Open Max5 and a patcher with the MaxAcq mxj object. MaxAcq will automatically detect the Acq server if it exists.
3) Enable sensor channels in AcqKnowledge either by loading in a template file through the MaxAcq 'loadTemplate' message or directly within the AcqKnowledge application
4) Enable channels for streaming (e.g. calc 0, analog 0, digital 0) with the MaxAcq 'stream' message.
5) Send a stream of bang messages to MaxAcq (usually with a metro) to output data as it arrives.


Testing:
In addition to the help file, a bare-bones Max example for testing purposes is included in examples/example.test.maxpat.


Test Run:
1) Open AcqKnowledge application, the program must be running for MaxAcq to detect it as a server.
2) Open Max5 and within Max5, open the file: example.test.maxpat, found at 
	/Applications/Max5/examples/MaxAcq

3) Within the "example.test.maxpat" click on the button above the 'opendialog' text box to load an AcqKnowledge template file located at:
	/Applications/Max5/examples/MaxAcq/template/acq_template.acq

4) Under the text "Output Data" within the example.test.maxpat window, click on the toggle below it to enable output to the patch window (example.test.maxpat file window)
5) Finally, click on the 'stream calc 0' message. The AcqKnowledge graph file should start acquiring data and the amplitude data from calculation channel CH0 should be streamed to and printed within the patch window.